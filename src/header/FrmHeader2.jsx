import { React, useState } from 'react';
import { motion } from 'framer-motion';
import { FaChevronDown } from 'react-icons/fa';
export default function FrmHeader2() {
  return (
    <div className="text-[13px]">
      <div className="flex items-center bg-gray-200 ">
        <DropdownIV
          icon="üíâ"
          label="‡∏´‡πâ‡∏≠‡∏á‡∏¢‡∏≤ IV"
          items={['Medication Profile', 'screenning', 'CheckOut']}
        />
        <DropdownIV
          icon="üß™"
          label="‡∏´‡πâ‡∏≠‡∏á‡∏¢‡∏≤‡πÄ‡∏Ñ‡∏°‡∏µ"
          items={[
            'Medication Profile',
            'Gen Order',
            'Screenning',
            'CheckOut',
            'Med Tranfer',
          ]}
        />
        <DropdownIV
          icon="üìë"
          label="‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï‡∏¢‡∏≤"
          items={[
            '‡πÅ‡∏ö‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ',
            '‡πÅ‡∏ö‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï‡∏¢‡∏≤‡∏™‡∏°‡∏∏‡∏ô‡πÑ‡∏û‡∏£',
            '‡πÅ‡∏ö‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï‡∏ô‡πâ‡∏≥‡∏¢‡∏≤‡∏Ü‡πà‡∏≤‡πÄ‡∏ä‡∏∑‡πâ‡∏≠',
            '‡πÅ‡∏ö‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï‡∏¢‡∏≤‡∏õ‡∏£‡∏≤‡∏®‡∏à‡∏≤‡∏Å‡∏Ü‡πà‡∏≤‡πÄ‡∏ä‡∏∑‡πâ‡∏≠',
          ]}
        />
        <DropdownIV
          icon="üìë"
          label="‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï‡∏¢‡∏≤"
          items={['Medication Profile', 'CheckOut']}
        />
        <DropdownIV
          icon="üè•"
          label="‡∏´‡πâ‡∏≠‡∏á‡∏¢‡∏≤ TPN"
          items={['Medication Profile', 'CheckOut']}
        />
        <button className=" flex items-center hover:bg-gray-500 active:bg-gray-300 px-3 py-1 rounded-md ">
          <span className="">üíä</span>
          <span className="ml-2">Pharmcare</span>
        </button>
        <button className=" flex items-center hover:bg-gray-500 active:bg-gray-300 px-3 py-1 rounded-md ">
          <span className="">üè•</span>
          <span className="ml-2">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡πà‡∏≤‡∏¢</span>
        </button>
        <button className=" flex items-center hover:bg-gray-500 active:bg-gray-300 px-3 py-1 rounded-md ">
          <span className="  ">üë©‚Äç‚öïÔ∏è</span>
          <span className="ml-2">Nurse Station</span>
        </button>
        <DropdownReport icon="üìÑ" label="Report" />

        <button className=" flex items-center hover:bg-gray-500 active:bg-gray-300 px-3 py-1 rounded-md ">
          <span className="">üìù</span>
          <span className="ml-2">‡∏Ñ‡∏•‡∏±‡∏á‡∏¢‡πà‡∏≠‡∏¢</span>
        </button>
        <button className=" flex items-center hover:bg-gray-500 active:bg-gray-300 px-3 py-1 rounded-md ">
          <span className="">üõí</span>
          <span className="ml-2">‡∏Ñ‡∏∑‡∏ô‡∏¢‡∏≤</span>
        </button>
        <button className=" flex items-center hover:bg-gray-500 active:bg-gray-300 px-3 py-1 rounded-md ">
          <span className="">üìä</span>
          <span className="ml-2">Med Reconcile</span>
        </button>
        <button className=" flex items-center hover:bg-gray-500 active:bg-gray-300 px-3 py-1 rounded-md ">
          <span className="">‚öôÔ∏è</span>
          <span className="ml-2">Setting</span>
        </button>
      </div>
    </div>
  );
}

const DropdownIV = ({ icon, label, items }) => {
  const [isOpen, setIsOpen] = useState(false);

  const menuVariants = {
    open: {
      opacity: 1,
      y: 0,
      display: 'block',
      transition: {
        type: 'spring',
        stiffness: 300,
        damping: 20,
      },
    },
    closed: {
      opacity: 0,
      y: -20,
      transitionEnd: {
        display: 'none',
      },
      transition: {
        type: 'spring',
        stiffness: 300,
        damping: 20,
      },
    },
  };
  const click = () => {
    alert('medication');
  };
  return (
    <div
      className="relative inline-block text-left z-50"
      onMouseEnter={() => setIsOpen(true)}
      onMouseLeave={() => setIsOpen(false)}
    >
      <button
        onClick={() => setIsOpen(!isOpen)}
        className="flex items-center hover:bg-gray-500 active:bg-gray-300 px-3 py-1 rounded-md  transition duration-300 ease-in-out"
      >
        <span className="">{icon}</span>
        <span>{label}</span>
        <FaChevronDown
          style={{
            marginLeft: '4px',
            transition: 'transform 0.3s ease',
            transform: isOpen ? 'rotate(0deg)' : 'rotate(180deg)',
          }}
        />
      </button>
      <motion.div
        initial="closed"
        animate={isOpen ? 'open' : 'closed'}
        variants={menuVariants}
        className="absolute text-sm left-0 mt-2 w-64 bg-white border border-gray-400 rounded-lg shadow-lg z-10"
      >
        {items.map((item) => (
          <DropdownItem key={item} label={item} onClick={() => alert(item)} />
        ))}
      </motion.div>
    </div>
  );
};

const DropdownReport = ({ icon, label }) => {
  const [isOpen, setIsOpen] = useState(false);

  const menuVariants = {
    open: {
      opacity: 1,
      y: 0,
      display: 'block',
      transition: {
        type: 'spring',
        stiffness: 300,
        damping: 20,
      },
    },
    closed: {
      opacity: 0,
      y: -20,
      transitionEnd: {
        display: 'none',
      },
      transition: {
        type: 'spring',
        stiffness: 300,
        damping: 20,
      },
    },
  };

  return (
    <div
      className="relative inline-block text-left "
      onMouseEnter={() => setIsOpen(true)}
      onMouseLeave={() => setIsOpen(false)}
    >
      <button
        onClick={() => setIsOpen(!isOpen)}
        className="flex items-center hover:bg-gray-500 active:bg-gray-300 px-3 py-1 rounded-md transition duration-300 ease-in-out"
      >
        <span className="">{icon}</span>
        <span className="ml-2">{label}</span>
        <FaChevronDown
          style={{
            marginLeft: '4px',
            transition: 'transform 0.3s ease',
            transform: isOpen ? 'rotate(0deg)' : 'rotate(180deg)',
          }}
        />
      </button>
      <motion.div
        initial="closed"
        animate={isOpen ? 'open' : 'closed'}
        variants={menuVariants}
        className="absolute text-sm left-0 mt-2 w-64 bg-white border border-gray-400 rounded-lg shadow-lg z-50"
      >
        <DropdownItem label="ADR" onClick={() => alert('ADR')} />
        <DropdownItem label="IV Admixture" />
        <DropdownItem label="Med Transfer" />
        <DropdownItem label="Nurse Station" />
        <DropdownItem label="Pharmcare" hasSubmenu icon="üè•">
          <DropdownItem label="‡∏´‡πâ‡∏≠‡∏á‡∏¢‡∏≤ IPD" />
          <DropdownItem label="‡∏´‡πâ‡∏≠‡∏á‡∏¢‡∏≤ OPD" />
          <DropdownItem label="‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥ Pharmcare" />
        </DropdownItem>
        <DropdownItem label="Sticker ‡∏¢‡∏≤" />
        <DropdownItem label="Workload" />
        <DropdownItem label="‡πÉ‡∏ö‡πÄ‡∏ö‡∏¥‡∏Å" />
        <DropdownItem label="‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢" />
        <DropdownItem label="‡∏Ç‡∏≤‡∏¢‡∏¢‡∏≤‡∏ô‡∏≠‡∏Å HAD,TDM,LAB ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏°‡∏µ‡∏ö‡∏≥‡∏ö‡∏±‡∏î" />
        <DropdownItem label="‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏¢‡∏≤" />
        <DropdownItem label="‡∏Ç‡∏≤‡∏¢‡∏™‡πà‡∏á‡πÅ‡∏•‡∏∞‡∏ú‡∏•‡∏¥‡∏ï" />
        <DropdownItem label="‡πÅ‡∏ö‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏¢‡∏≤" />
        <DropdownItem label="‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô‡∏¢‡∏≤" />
      </motion.div>
    </div>
  );
};

const DropdownItem = ({ label, shortcut, onClick }) => (
  <div
    className="flex justify-between items-center px-4 py-2 hover:bg-gray-100 cursor-pointer transition duration-300 ease-in-out "
    onClick={onClick}
  >
    <span>{label}</span>
    {shortcut && <span className="text-sm text-gray-500">{shortcut}</span>}
  </div>
);
